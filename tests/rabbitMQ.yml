name: RabbitMQ testsuite
vars:
  addrs: 'amqp://localhost:5672'
  user: guest
  password: guest
  qName: test
  exchange: ""
  routingKey: ""

testcases:
  - name: RabbitMQ publish testcase
    steps:
      - type: rabbitmq
        addrs: "{{.addrs}}"
        user: "{{.user}}"
        password: "{{.password}}"
        clientType: publisher
        qName: "{{.qName}}"
        durable: true
        exchange: "{{.exchange}}"
        routingKey: "{{.routingKey}}"
        messageLimit: 1
        messages: 
          - value: '{"a": "b"}'
            contentType: application/json
            contentEncoding: utf8
            persistant: false
            headers: 
              myCustomHeader: value
              myCustomHeader2: value2
  - name: RabbitMQ subscribe testcase
    steps:
      - type: rabbitmq
        addrs: "{{.addrs}}"
        user: "{{.user}}"
        password: "{{.password}}"
        clientType: subscriber
        qName: "{{.qName}}"
        durable: true
        exchange: "{{.exchange}}"
        routingKey: "{{.routingKey}}"
        messageLimit: 1
        assertions: 
          - result.bodyjson.bodyjson0.a ShouldEqual b   
          - result.headers.headers0.mycustomheader ShouldEqual value
          - result.headers.headers0.mycustomheader2 ShouldEqual value2
          - result.messages.messages0.contentencoding ShouldEqual utf8
          - result.messages.messages0.contenttype ShouldEqual application/json

  - name: "RabbitMQ publish (pubsub)"
    steps:
      - type: rabbitmq
        addrs: "{{.addrs}}"
        user: "{{.user}}"
        password: "{{.password}}"
        clientType: publisher
        exchange: exchange_test
        routingKey: pubsub_test
        messages: 
          - value: '{"a": "b"}'
